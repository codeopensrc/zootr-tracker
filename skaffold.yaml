## Yaml anchors
.artifact_image: &artifact_image registry.codeopensrc.com/os/zootr-tracker/app
.chartPath: &chartPath charts/zootr
.release_name: &release_name zootr
.release_namespace: &release_namespace skaffold-zootr

.sync: &sync
  manual:
  - src: "src/**"
    dest: /home/app
  - src: "server/**"
    dest: /home/app

.custom_build_deps: &custom_build_deps
  paths:
  - src/**
  - server/**
  - Dockerfile
  - package.json
  ignore:
  - "**/*.swp"
  - "**/*.swo"

.helm_flags: &helm_flags
  install: ["--timeout=300s"]
  upgrade: ["--timeout=300s"]

### Main config
apiVersion: skaffold/v3alpha1
kind: Config
metadata:
  name: zootr-tracker
profiles:
### Build locally and deploy to minikube or remote cluster
- name: docker
  activation:
  - kubeContext: minikube
  build:
    ### Uncomment when deploying to remote cluster
    ### Not recommended to push if deploying to local minikube
    #local:
    #  push: true
    artifacts:
      - image: *artifact_image
        context: .
        custom:
          buildCommand: ./build.sh buildx
          dependencies: *custom_build_deps
        sync: *sync
  deploy:
    ### Deploy to specific context
    #kubeContext: "minikube"
    helm:
      flags: *helm_flags
      releases:
      - name: *release_name
        namespace: *release_namespace
        createNamespace: true
        chartPath: *chartPath
        wait: true
        valuesFiles:
        - skaffold/docker-values.yaml
        ## To pass in a local .env file
        #setFiles:
        #  app.dotEnvFile: .env


### Build remotely and deploy to remote cluster
- name: remote
  build:
    local:
      push: true
    artifacts:
      - image: *artifact_image
        context: .
        custom:
          ### './build.sh ctl' or './build.sh remote_buildx'
          buildCommand: ./build.sh ctl
          dependencies: *custom_build_deps
        sync: *sync
  deploy:
    helm:
      flags: *helm_flags
      releases:
      - name: *release_name
        namespace: *release_namespace
        createNamespace: true
        chartPath: *chartPath
        wait: true
        valuesFiles:
        - skaffold/remote-values.yaml
        ## To pass in a local .env file
        #setFiles:
        #  app.dotEnvFile: .env


### Build remotely and deploy to remote cluster with 3 replicated mongo databases
- name: replica
  build:
    local:
      push: true
    artifacts:
      - image: *artifact_image
        context: .
        custom:
          buildCommand: ./build.sh ctl
          dependencies: *custom_build_deps
        sync: *sync
  deploy:
    helm:
      flags: *helm_flags
      releases:
      - name: *release_name
        namespace: *release_namespace
        createNamespace: true
        chartPath: *chartPath
        valuesFiles:
        - skaffold/replica-values.yaml


### For ci builds
- name: ci
  build:
    tagPolicy:
      gitCommit:
        ignoreChanges: true
    local:
      push: true
    artifacts:
      ##! Pass '--default-repo registry/path' to skaffold to use custom registry
      - image: app
        context: .
        custom:
          ##! Illustrating -r REGISTRY to pass custom registry
          buildCommand: ./build.sh ctl prod -b ci -r ${CI_REGISTRY}
  deploy:
    helm:
      flags: *helm_flags
      releases:
      - name: "{{.APPNAME}}"
        namespace: "{{.KUBE_NAMESPACE}}"
        chartPath: *chartPath
        wait: true
        valuesFiles:
        - skaffold/ci-values.yaml
        - helm_ci_values.yaml
        setValueTemplates:
          app.image.repository: "{{.IMAGE_REPO}}"
          app.image.tag: "{{.IMAGE_TAG}}@{{.IMAGE_DIGEST}}"
        setValues:
          app.ingress.tls: ""
